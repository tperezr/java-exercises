
package ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "GmailInterface", targetNamespace = "http://appServidor/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface GmailInterface {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "iniciarSesion", targetNamespace = "http://appServidor/", className = "ws.IniciarSesion")
    @ResponseWrapper(localName = "iniciarSesionResponse", targetNamespace = "http://appServidor/", className = "ws.IniciarSesionResponse")
    @Action(input = "http://appServidor/GmailInterface/iniciarSesionRequest", output = "http://appServidor/GmailInterface/iniciarSesionResponse")
    public int iniciarSesion(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrarse", targetNamespace = "http://appServidor/", className = "ws.Registrarse")
    @ResponseWrapper(localName = "registrarseResponse", targetNamespace = "http://appServidor/", className = "ws.RegistrarseResponse")
    @Action(input = "http://appServidor/GmailInterface/registrarseRequest", output = "http://appServidor/GmailInterface/registrarseResponse")
    public int registrarse(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "enviarMail", targetNamespace = "http://appServidor/", className = "ws.EnviarMail")
    @ResponseWrapper(localName = "enviarMailResponse", targetNamespace = "http://appServidor/", className = "ws.EnviarMailResponse")
    @Action(input = "http://appServidor/GmailInterface/enviarMailRequest", output = "http://appServidor/GmailInterface/enviarMailResponse")
    public int enviarMail(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<ws.Mail>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "solicitarMailsInbox", targetNamespace = "http://appServidor/", className = "ws.SolicitarMailsInbox")
    @ResponseWrapper(localName = "solicitarMailsInboxResponse", targetNamespace = "http://appServidor/", className = "ws.SolicitarMailsInboxResponse")
    @Action(input = "http://appServidor/GmailInterface/solicitarMailsInboxRequest", output = "http://appServidor/GmailInterface/solicitarMailsInboxResponse")
    public List<Mail> solicitarMailsInbox(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<ws.Mail>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "solicitarMailsOutbox", targetNamespace = "http://appServidor/", className = "ws.SolicitarMailsOutbox")
    @ResponseWrapper(localName = "solicitarMailsOutboxResponse", targetNamespace = "http://appServidor/", className = "ws.SolicitarMailsOutboxResponse")
    @Action(input = "http://appServidor/GmailInterface/solicitarMailsOutboxRequest", output = "http://appServidor/GmailInterface/solicitarMailsOutboxResponse")
    public List<Mail> solicitarMailsOutbox(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "borrarMailInbox", targetNamespace = "http://appServidor/", className = "ws.BorrarMailInbox")
    @ResponseWrapper(localName = "borrarMailInboxResponse", targetNamespace = "http://appServidor/", className = "ws.BorrarMailInboxResponse")
    @Action(input = "http://appServidor/GmailInterface/borrarMailInboxRequest", output = "http://appServidor/GmailInterface/borrarMailInboxResponse")
    public int borrarMailInbox(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "borrarMailOutbox", targetNamespace = "http://appServidor/", className = "ws.BorrarMailOutbox")
    @ResponseWrapper(localName = "borrarMailOutboxResponse", targetNamespace = "http://appServidor/", className = "ws.BorrarMailOutboxResponse")
    @Action(input = "http://appServidor/GmailInterface/borrarMailOutboxRequest", output = "http://appServidor/GmailInterface/borrarMailOutboxResponse")
    public int borrarMailOutbox(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "desconexion", targetNamespace = "http://appServidor/", className = "ws.Desconexion")
    @ResponseWrapper(localName = "desconexionResponse", targetNamespace = "http://appServidor/", className = "ws.DesconexionResponse")
    @Action(input = "http://appServidor/GmailInterface/desconexionRequest", output = "http://appServidor/GmailInterface/desconexionResponse")
    public void desconexion(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
